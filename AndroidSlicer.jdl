application {
  config {
    baseName AndroidSlicer,
    applicationType monolith,
    packageName org.unibremen.mcyl.androidslicer,
 	  cacheProvider ehcache,
    enableHibernateCache false,
    websocket false,
    databaseType mongodb,
    devDatabaseType mongodb,
    prodDatabaseType mongodb,
    serviceDiscoveryType false,
    buildTool gradle,
    clientFramework angularX,
    useSass true,
    clientPackageManager npm,
    testFrameworks [gatling, cucumber, protractor],
    enableTranslation false,
    skipUserManagement true
  }
  entities *
}

entity Slice {
  androidVersion Integer required,
  androidClassName String required,
  /**
   * JSON-List with entry method names
   */
  entryMethods TextBlob required,
  /**
   * JSON-List with seed statement names
   */
  seedStatements TextBlob required,
  /**
   * Set of sliced classes with class name and code
   */
  slicedClasses Blob,
  log TextBlob,
  threadId String,
  running Boolean,
  cfaType CFAType required,
  cfaLevel Integer,
  /**
   * com.ibm.wala.ipa.callgraph.AnalysisOptions.ReflectionOptions
   */
  reflectionOptions ReflectionOptions required,
  /**
   * com.ibm.wala.ipa.slicer.Slicer.DataDependenceOptions
   */
  dataDependenceOptions DataDependenceOptions required,
  /**
   * com.ibm.wala.ipa.slicer.Slicer.ControlDependenceOptions
   */
  controlDependenceOptions ControlDependenceOptions required
}

entity SlicerSetting {
  key String required,
  value String required
}

entity CFAOption {
  type CFAType required,
  description TextBlob,
  /**
   * There can only be one default. This handled during create/save process.
   */
  isDefault Boolean
}

enum CFAType {
  ZERO_CFA,
  ZERO_ONE_CFA,
  VANILLA_ZERO_ONE_CFA,
  N_CFA,
  VANILLA_N_CFA,
  ZERO_CONTAINER_CFA,
  ZERO_ONE_CONTAINER_CFA,
  VANILLA_ZERO_ONE_CONTAINER_CFA
}

entity SlicerOption {
  type SlicerOptionType required,
  key String required,
  description TextBlob,
   /** There can only be one default per SlicerOptionType. This handled during create/save process. */
  isDefault Boolean 
}

enum SlicerOptionType {
	REFLECTION_OPTION,
  DATA_DEPENDENCE_OPTION,
  CONTROL_DEPENDENCE_OPTION
}

/** Placeholder for com.ibm.wala.ipa.callgraph.AnalysisOptions.ReflectionOptions. Delete on server side after code generation. */
enum ReflectionOptions {
  FULL,
  APPLICATION_GET_METHOD,
  NO_FLOW_TO_CASTS,
  NO_FLOW_TO_CASTS_APPLICATION_GET_METHOD,
  NO_METHOD_INVOKE,
  NO_FLOW_TO_CASTS_NO_METHOD_INVOKE,
  ONE_FLOW_TO_CASTS_NO_METHOD_INVOKE,
  ONE_FLOW_TO_CASTS_APPLICATION_GET_METHOD,
  MULTI_FLOW_TO_CASTS_APPLICATION_GET_METHOD,
  NO_STRING_CONSTANTS,
  STRING_ONLY,
  NONE
}

/** Placeholder for  com.ibm.wala.ipa.slicer.Slicer.DataDependenceOptions. Delete on server side after code generation. */
enum DataDependenceOptions {
  FULL,
  NO_BASE_NO_EXCEPTIONS,
  NO_BASE_NO_HEAP,
  NO_BASE_NO_HEAP_NO_EXCEPTIONS,
  NO_BASE_PTRS,
  NO_EXCEPTIONS,
  NO_HEAP,
  NO_HEAP_NO_EXCEPTIONS,
  NONE,
  REFLECTION
}

/** Placeholder for  com.ibm.wala.ipa.slicer.Slicer.ControlDependenceOptions. Delete on server side after code generation. */
enum ControlDependenceOptions {
  FULL,
  NO_EXCEPTIONAL_EDGES,
  NONE
}

paginate Slice, SlicerSetting, SlicerOption with pagination
service Slice with serviceClass
